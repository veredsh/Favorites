/* minus.asm  
 *minus N numbers: X1-X2- ... -XN
 *args - one or more
 */
 
 MINUS:
 
	PUSH(FP);
	MOV(FP,SP);		/*OPEN NEW FRAME*/
	PUSH(R1);
	PUSH(R2);
	PUSH(R3);
	MOV(R2,IMM(1)); /*R2 WILL BE UP UNTIL GET TO R1*/
	MOV(R1,FPARG(1)); /*SAVE THE ARGUMENTS NUMBER TO R1*/
	CMP(R1,IMM(0));
	JUMP_GT(ANOTHER_CHECK_MINUS);
	SHOW("bad input argument for - need to be one or more arguments. R1 is the num of arguments",R1);
	HALT;
 ANOTHER_CHECK_MINUS:
	MOV(R0,IMM(0));  /*IF I HAVE ONLY 1 ARGUMENT I WANT THE ANS TOBE 0 - ARG SO R0<-0*/
	CMP(R1,IMM(1));
	JUMP_GT(MORE_THEN_1_ARGS_MINUS);
	MOV(R3,IMM(0));
	SUB(R3,INDD(FPARG(2),1));
	JUMP(MINUS_LOOP_END);
 MORE_THEN_1_ARGS_MINUS:
	MOV(R3,INDD(FPARG(2),1));/*I HAVE MORE THEN 1 ARGUMENT SO THE ANS IS( THE FIRST ARG - REST ARGS) SO R0<-FPARG(2)*/
 MINUS_LOOP:
	CMP(R1,R2);
	JUMP_EQ(MINUS_LOOP_END);	
	CMP(IND(FPARG(2+R2)),T_INTEGER); /*CHECK IF THE ARGUMENT IN R1 PLACE IS INTEGER*/
	JUMP_EQ(ARG_IS_OK_MINUS);
	SHOW("The argumen in the FPARG(3+R2) place is not integer. print FPARG(3+R2)",IND(FPARG(2+R2)));
	HALT;
 ARG_IS_OK_MINUS:

	SUB(R3,INDD(FPARG(2+R2),1)); /*SUB FROM ANS  THE VALUE OF THE SOB_INTEGER THAT IN FPARG(X)*/
	
	INCR(R2);
	JUMP(MINUS_LOOP);
 MINUS_LOOP_END:
	PUSH(R3);
	CALL(MAKE_SOB_INTEGER); /*NOW R0 POINT TO SOB_INTEGER THAT IS VALUE IS THE 	MINUS ANS*/
	DROP(1);
	POP(R3);
	POP(R2);
	POP(R1);
	MOV(SP,FP);
	POP(FP);
 RETURN; 
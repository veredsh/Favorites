/* string_to_symbol.asm
* receive pointer to T_STRING
* return in R0 a pointer to T_SYMBOL
*/

STRING_TO_SYMBOL:
	PUSH(FP);
	MOV(FP, SP);
	PUSH(R1);
	PUSH(R2);
	PUSH(R3);
	MOV(R1, FPARG(2));/* FPARG(0) IS ENV, FPARG(1) IS N */
	CMP(IND(R1), T_STRING);
	JUMP_EQ(STS_SEARCH);
	PUSH(IMM('S')); /* print error message */
	CALL(PUTCHAR);
	PUSH(IMM('T'));
	CALL(PUTCHAR);
	PUSH(IMM('S'));
	CALL(PUTCHAR);
	PUSH(IMM('-'));
	CALL(PUTCHAR);
	PUSH(IMM('N'));
	CALL(PUTCHAR);
	PUSH(IMM('O'));
	CALL(PUTCHAR);
	PUSH(IMM('T'));
	CALL(PUTCHAR);
	PUSH(IMM(' '));
	CALL(PUTCHAR);
	PUSH(IMM('S'));
	CALL(PUTCHAR);
	PUSH(IMM('T'));
	CALL(PUTCHAR);
	PUSH(IMM('R'));
	CALL(PUTCHAR);
	PUSH(IMM('I'));
	CALL(PUTCHAR);
	PUSH(IMM('N'));
	CALL(PUTCHAR);
	PUSH(IMM('G'));
	CALL(PUTCHAR);
	PUSH(IMM('\n'));
	CALL(PUTCHAR);
	DROP(15);
	HALT;
STS_SEARCH:
	MOV(R2, IND(LINKED_LIST)); /* R2 is a pointer to head of bucket list */
STS_SEARCH_LOOP:
	CMP(R2, IMM(0)); /* END OF LIST */
	JUMP_EQ(STS_MAKE_BUCKET);
	PUSH(IND(R2));
	PUSH(R1);
	CALL(EQUAL_STRINGS);
	DROP(2); /* R0 IS A POINTER TO T_BOOL OBJECT */
	CMP(R0, SOB_TRUE); /* TRUE */
	JUMP_EQ(STS_FOUND);
	MOV(R2, INDD(R2, 3)); /* get address for next */
	JUMP(STS_SEARCH_LOOP);
STS_MAKE_BUCKET:
	PUSH(IMM(4));
	CALL(MALLOC);
	DROP(1);
	MOV(IND(R0), R1);
	MOV(INDD(R0, 1), IMM(0)); /* UNDEFINED */
	MOV(INDD(R0, 2), IMM(0)); 
	MOV(R3, IND(LINKED_LIST));
	MOV(INDD(R0, 3), R3); /* ENTER TO BUCKET LIST */
	MOV(IND(LINKED_LIST), R0); /* MAKE HEAD OF BUCKET LIST */
	MOV(R2, R0);
STS_FOUND:
	PUSH(R2);
	CALL(MAKE_SOB_SYMBOL);
	DROP(1);
STS_EXIT:
	POP(R3);
	POP(R2);
	POP(R1);
	POP(FP);
	RETURN;
	